#!/ usr / bin/ python3
# Partie 1 du code
from time import sleep
import time
import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BOARD)
#fonction permettant de commuter toutes les broches utilisées sur lr niveau bas
def all_off():
    GPIO.output(EnableA,False)
    GPIO.output(EnableB,False)
    GPIO.output(Input1,False)
    GPIO.output(Input2,False)
    GPIO.output(Input3,False)
    GPIO.output(Input4,False)
    return
#Les noms des entrées L298 sont attribués aux broches GPIO.
EnableA = 13
EnableB = 15
Input1 = 3
Input2 = 5
Input3 = 7
Input4 = 11
#Déclarer toutes les broches GPIO utilisées comme sortie
GPIO.setup(EnableA,GPIO.OUT)
GPIO.setup(EnableB,GPIO.OUT)
GPIO.setup(Input1,GPIO.OUT)
GPIO.setup(Input2,GPIO.OUT)
GPIO.setup(Input3,GPIO.OUT)
GPIO.setup(Input4,GPIO.OUT)
#appeler la fonction all_off
all_off()
#--------------------------------------------------------------#
#Partie 1 du code
try:
  while True :
    # champ de saisie pour la séléction du moteur
    # respecter les majuscules et les minuscules
    motor=input("Entrez le moteur: 'A' ou 'B ': ")
    # champ de saisie pour la sélection de la direction 
    direction=input(" Entrez le sens de rotation 'V' ou 'Z ': ")
    # if-boucle pour interroger l'entrée précédente
    
    if motor == "A" and direction == "V":
       GPIO.output (EnableA,True)
       GPIO.output (Input1,True)
       GPIO.output (Input2,False)
       sleep(5) # le moteur tourne 5 s
       GPIO.output (EnableA,False)
       GPIO.output (Input1,False)
    if motor == "A" and direction == "Z":
       GPIO.output(EnableA,True)
       GPIO.output(Input1,False)
       GPIO.output(Input2,True)
       sleep(5)
       GPIO.output(EnableA,False)
       GPIO.output(Input2,False)
    if motor == "B" and direction == "V":
       GPIO.output(EnableB,True)
       GPIO.output(Input3,True)
       GPIO.output(Input4,False)
       sleep(5)
       GPIO.output(EnableB,False)
       GPIO.output(Input3,False)
    if motor == "B" and direction == "Z":
       GPIO.output(EnableB,True)
       GPIO.output(Input3,False)
           GPIO.output(Input4,True)
           sleep(5)
           GPIO.output (EnableB,False)
           GPIO.output(Input4,False)
# beim Programmende durch Strg +C wird " all_off " ausgef ührt
except KeyboardInterrupt :
       all_off()



